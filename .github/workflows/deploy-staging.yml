name: Stage the app

env:
  DOCKER_IMAGE_NAME: gaborsebestyen-azure-ttt
  IMAGE_REGISTRY_ULR: docker.pkg.github.com
  AZURE_WEBAPP_NAME: gaborsebestyen-ttt-app
  

# Controls when the workflow will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    types: [ labeled ]

# A workflow run is made 4 jobs
jobs:
  hadolint:
    name: Run hadolint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run hadolint
        uses: hadolint/hadolint-action@f988afea3da57ee48710a9795b6bb677cc901183
        with:
          dockerfile: ./Dockerfile
          format: sarif
          output-file: hadolint-results.sarif
          no-fail: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: hadolint-results.sarif
          wait-for-processing: true

  build:
    if: contains(github.event.pull_request.labels.*.name, 'stage')
    runs-on: ubuntu-latest
    needs: hadolint
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: npm install and build webpack
        run: |
          npm install
          npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: webpack artifacts
          path: public/
          
  Build-Docker-Image:
    runs-on: ubuntu-latest
    needs: build
    name: Build image and store in GitHub Packages
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: webpack artifacts
          path: public/
          
      - name: create image and store in packages
        uses: mattdavis0351/actions/docker-gpr@1.3.0
        with:
          repo-token: ${{secrets.GITHUB_TOKEN}}
          image-name: ${{env.DOCKER_IMAGE_NAME}}
          
  Deploy-to-Azure:
    runs-on: ubuntu-latest
    needs: Build-Docker-Image
    name: Deploy app container to Azure
    steps:
      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
          
      - uses: azure/docker-login@v1
        with:
          login-server: ${{env.IMAGE_REGISTRY_URL}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
          
      - name: Deploy web app container
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{env.AZURE_WEBAPP_NAME}}
          images: ${{env.IMAGE_REGISTRY_URL}}/gaborsebestyen/devops-p9/${{env.DOCKER_IMAGE_NAME}}:${{github.sha}}
          
      - name: Azure logout
        run: |
          az logout        
